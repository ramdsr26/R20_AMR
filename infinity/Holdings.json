{
  "swagger" : "2.0",
  "info" : {
    "description" : "Holdings services enable the user to fetch the account-level pending and posted transactions from the Holdings Microservice. In the Infinity application, when a user navigates to the transactions section of the account, the Holdings APIs are leveraged to fetch all the transactions and balance details. These details include the beneficiary details along with the respective time stamps.",
    "version" : "1.0",
    "title" : "Holdings"
  },
  "host" : "vivekiyer1.konycloud.com/services",
  "basePath" : "/data/v1/RBObjects/objects",
  "tags" : [ {
    "name" : "Transactions"
  } ],
  "schemes" : [ "https" ],
  "paths" : {
    "/Transactions/getAccountTransactionByType" : {
      "post" : {
        "tags" : [ "Transactions" ],
        "summary" : "Retrieves the pending Transactions from Transact, or any core banking system, and posted Transactions from the Holdings Micro Services",
		"description" : "Retrieves the pending Transactions from Transact, or any core banking system, and posted Transactions from the Holdings Micro Services. These APIs are used in the Online Banking application to fetch and display the list and details of all the recent transactions that were made by the customer from the account. The list of transactions is displayed when the user opens the Transactions list page from the Account Dashboard screen.",
        "operationId" : "getAccountTransactionByTypeTransactions",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Kony-Authorization",
          "in" : "header",
          "description" : "This service invocation requires authentication.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Transactions"
          }
        } ],
        "responses" : {
          "200" : {
            "schema" : {
              "$ref" : "#/definitions/Response_Custom"
            }
          }
        }
      }
    },
    "/Transactions/getAccountPostedTransactions" : {
      "post" : {
        "tags" : [ "Transactions" ],
        "summary" : "Retrieves the posted transactions from the Holdings Microservices",
		"description" : "Retrieves the posted transactions from the Holdings Microservices. These APIs are used in the Mobile application to fetch and display the list and details of the recent successful transactions that were made by the customer from the account.",
        "operationId" : "getAccountPostedTransactionsTransactions",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Kony-Authorization",
          "in" : "header",
          "description" : "This service invocation requires authentication.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Transactions"
          }
        } ],
        "responses" : {
          "200" : {
            "schema" : {
              "$ref" : "#/definitions/Response_Custom"
            }
          }
        }
      }
    },
	    "/Transactions/getAccountPostedTransactionsPreview" : {
      "post" : {
        "tags" : [ "Transactions" ],
        "summary" : "Retrieves all the pending and posted transactions for all the accounts of the logged in user",
		"description" : "Retrieves all the pending and posted transactions for all the accounts of the logged in user. This API is used in smartwatches, where the user can preview the transactions with ease",
        "operationId" : "getAccountPostedTransactionsPreviewTransactions",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Kony-Authorization",
          "in" : "header",
          "description" : "This service invocation requires authentication.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Transactions"
          }
        } ],
        "responses" : {
          "200" : {
            "schema" : {
              "$ref" : "#/definitions/Response_Custom"
            }
          }
        }
      }
    },
	
		    "/Transactions/getAllTransactionsForAdmin" : {
      "post" : {
        "tags" : [ "Transactions" ],
        "summary" : "Retrieves the pending and posted transactions from an account of a customer",
		"description" : "Retrieves the pending and posted transactions from an account of a customer. This API provides an admin based access to accounts",
        "operationId" : "getAllTransactionsForAdminTransactions",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Kony-Authorization",
          "in" : "header",
          "description" : "This service invocation requires authentication.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Transactions"
          }
        } ],
        "responses" : {
          "200" : {
            "schema" : {
              "$ref" : "#/definitions/Response_Custom"
            }
          }
        }
      }
    },
	
			    "/Transactions/getLoanSchedule" : {
      "post" : {
        "tags" : [ "Transactions" ],
        "summary" : "Retrieves the overdue and future installments or schedules for a specific loan account",
		"description" : "Retrieves the overdue and future installments or schedules for a specific loan account.",
        "operationId" : "getLoanScheduleTransactions",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Kony-Authorization",
          "in" : "header",
          "description" : "This service invocation requires authentication.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Transactions"
          }
        } ],
        "responses" : {
          "200" : {
            "schema" : {
              "$ref" : "#/definitions/Response_Custom"
            }
          }
        }
      }
    },
	
				    "/Transactions" : {
      "get" : {
        "tags" : [ "Transactions" ],
        "summary" : "Retrieves the pending and posted transactions of a specific account.",
		"description" : "Retrieves the pending and posted transactions of a specific account.",
        "operationId" : "getTransactions",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Kony-Authorization",
          "in" : "header",
          "description" : "This service invocation requires authentication.",
          "required" : true,
          "type" : "string"
        },  ],
        "responses" : {
          "200" : {
            "schema" : {
              "$ref" : "#/definitions/Response_Get_Transactions"
            }
          }
        }
      }
    },
	
					    "/Transactions/getPostedUserTransactions" : {
      "post" : {
        "tags" : [ "Transactions" ],
        "summary" : "Retrieves all the completed (posted) transactions of a specific user based on the User ID",
		"description" : "Retrieves all the completed (posted) transactions of a specific user based on the User ID. The User ID gets generated for every user after a successful login. This API is used in mobile applications.",
        "operationId" : "getPostedUserTransactionsTransactions",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Kony-Authorization",
          "in" : "header",
          "description" : "This service invocation requires authentication.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Transactions"
          }
        } ],
        "responses" : {
          "200" : {
            "schema" : {
              "$ref" : "#/definitions/Response_Custom"
            }
          }
        }
      }
    },
  },
  "definitions" : {
    "Transactions" : {
      "type" : "object",
      "properties" : {
        "accountID" : {
          "type" : "string",
          "description" : "Specifies the unique ID of the account"
        },
        "accountNumber" : {
          "type" : "string",
          "description" : "Specifies the account number of the customer"
        },
        "amount" : {
          "type" : "string",
          "description" : "Specifies the amount transferred by the customer"
        },
        "amountTransferedTillNow" : {
          "type" : "string",
          "description" : "Specifies the total amount transferred by the customer upto today"
        },
        "authenticationRequired" : {
          "type" : "string",
          "description" : "Specifies whether the authentication is required for fetching the transactions"
        },
        "billCategory" : {
          "type" : "string",
          "description" : "Specifies the category of bills."
        },
        "billCategoryId" : {
          "type" : "string",
          "description" : "Specifies the unique ID of each bill category"
        },
        "billDueAmount" : {
          "type" : "string",
          "description" : "Specifies the amount that the due bills accumulated"
        },
        "billDueDate" : {
          "type" : "string",
          "description" : "Specifies the due date for the bills to be paid"
        },
        "billerCategoryName" : {
          "type" : "string",
          "description" : "Specifies the name of the biller category."
        },
        "billGeneratedDate" : {
          "type" : "string",
          "description" : "Specifies the date on which the bill was generated"
        },
        "billid" : {
          "type" : "string",
          "description" : "Specifies the unique ID for the bill"
        },
        "billPaidAmount" : {
          "type" : "string",
          "description" : "Specifies the bill amount that is to be paid"
        },
        "billPaidDate" : {
          "type" : "string",
          "description" : "Specifies the date by which the bill must be paid"
        },
        "bulkPayString" : {
          "type" : "string",
          "description" : "Specifies the pay string"
        },
        "cashlessEmail" : {
          "type" : "string",
          "description" : "Specifies the email ID for cashless email"
        },
        "cashlessMode" : {
          "type" : "string",
          "description" : "Specifies whether the transaction supports cashless mode"
        },
        "cashlessOTP" : {
          "type" : "string",
          "description" : "Specifies the generated OTP for performing the cashless transaction"
        },
        "cashlessOTPValidDate" : {
          "type" : "string",
          "description" : "Specifies the date up to which the OTP is valid"
        },
        "cashlessPersonName" : {
          "type" : "string",
          "description" : "Specifies the beneficiary name to whom the cashless transaction is made"
        },
        "cashlessPhone" : {
          "type" : "string",
          "description" : "Specifies the phone number for performing a cashless transaction"
        },
        "cashlessPin" : {
          "type" : "string",
          "description" : "Specifies the unique PIN number for performing cashless transactions"
        },
        "cashlessSecurityCode" : {
          "type" : "string",
          "description" : "Specifies the security code for performing the cashless transactions"
        },
        "cashWithdrawalTransactionStatus" : {
          "type" : "string",
          "description" : "Specifies the status for the cash withdrawal process"
        },
        "category" : {
          "type" : "string",
          "description" : "Specifies the transaction category such as withdrawal or deposit"
        },
        "checkImage" : {
          "type" : "string",
          "description" : "Specifies the check image URL"
        },
        "checkNumber" : {
          "type" : "string",
          "description" : "Specifies the unique check number"
        },
        "deliverBy" : {
          "type" : "string",
          "description" : "Specifies the time by which the deilery must be made"
        },
        "description" : {
          "type" : "string",
          "description" : "Specifies spe"
        },
        "eBillEnable" : {
          "type" : "string",
          "description" : "Specifies whether E-Bill facility is enabled or not"
        },
        "eBillSupport" : {
          "type" : "string",
          "description" : "Specifies whether the support for E-Bill facility exists or not"
        },
        "ebillURL" : {
          "type" : "string",
          "description" : "Specifies the E-BIll URL"
        },
        "errmsg" : {
          "type" : "string",
          "description" : "Specifies the error message generated by the application"
        },
        "ExternalAccountNumber" : {
          "type" : "string",
          "description" : "Specifies the external account number of the user"
        },
        "firstDeposit" : {
          "type" : "string",
          "description" : "Specfies the first deposit made by the customer"
        },
        "firstRecordNumber" : {
          "type" : "string",
          "description" : "Specifies the number of the first transaction record"
        },
        "frequencyEndDate" : {
          "type" : "string",
          "description" : "Specifies the date on which the messages must stop being sent (This parameter is valid only when frequencyType has been provided)."
        },
        "frequencyStartDate" : {
          "type" : "string",
          "description" : "Specifies the date on which messages must start being sent (This parameter is valid only when frequencyType has been provided)."
        },
        "frequencyType" : {
          "type" : "string",
          "description" : "Specifies the frequency at which the payment transfers must be made. The transfers can be made on a daily, weekly, or monthly basis."
        },
        "fromAccountBalance" : {
          "type" : "string",
          "description" : "Specifies the balance snapshot of the debit account at the time of transaction"
        },
        "fromAccountName" : {
          "type" : "string",
          "description" : "Specifies the name of the account from which the amount must be debited."
        },
        "fromAccountNumber" : {
          "type" : "string",
          "description" : "Specifies the Account Number from which the amount must be debited"
        },
        "fromAccountType" : {
          "type" : "string",
          "description" : "Specifies the type of account from which the transaction must be made"
        },
        "fromCheckNumber" : {
          "type" : "string",
          "description" : "Specifies the check number of the account"
        },
        "fromNickName" : {
          "type" : "string",
          "description" : "Specifies the nickname of the customer from whose account the transaction must be made"
        },
        "hasDepositImage" : {
          "type" : "string",
          "description" : "Specifies whether the account supports deposits"
        },
        "isScheduled" : {
          "type" : "string",
          "description" : "Specifies whether the transfer is a scheduled transfer or a normal transfer"
        },
        "lastRecordNumber" : {
          "type" : "string",
          "description" : "Specifies the number of the last transaction record"
        },
        "limit" : {
          "type" : "string",
          "description" : "Specifies the ending index of the sorted records that are used in pagination"
        },
        "numberOfRecurrences" : {
          "type" : "string",
          "description" : "Specifies the total number of recurrences for the transactions"
        },
        "offset" : {
          "type" : "string",
          "description" : "Specifies the starting index of the sorted records that are used in pagination"
        },
        "order" : {
          "type" : "string",
          "description" : "Specifies the sorting order for the response (Ascending/Descending)"
        },
        "otp" : {
          "type" : "string",
          "description" : "Specifies the One Time Password code for the transaction approval"
        },
        "p2pContact" : {
          "type" : "string",
          "description" : "Specifies the Peer to Peer transaction account details"
        },
        "p2pRequiredDate" : {
          "type" : "string",
          "description" : "Specifies the date for performing the peer to peer transaction"
        },
        "payeeAccountNumber" : {
          "type" : "string",
          "description" : "Specifies the account number to which the amount must be debited"
        },
        "payeeAddressLine1" : {
          "type" : "string",
          "description" : "Specifies the first line of the payee's address"
        },
        "payeeId" : {
          "type" : "string",
          "description" : "Specifies the unique ID of the payee"
        },
        "payeeName" : {
          "type" : "string",
          "description" : "Specifies the name of the payee"
        },
        "payeeNickName" : {
          "type" : "string",
          "description" : "Specifies the nickname of the payee"
        },
        "payoffFlag" : {
          "type" : "string",
          "description" : "Specifies the payoff flag"
        },
        "payPersonEmail" : {
          "type" : "string",
          "description" : "paypersonEmail"
        },
        "payPersonName" : {
          "type" : "string",
          "description" : "payPersonName"
        },
        "payPersonPhone" : {
          "type" : "string",
          "description" : "payPersonPhone"
        },
        "penaltyFlag" : {
          "type" : "string",
          "description" : "Specifies whether the account is under penalty"
        },
        "personId" : {
          "type" : "string",
          "description" : "personId"
        },
        "recurrenceDesc" : {
          "type" : "string",
          "description" : "Specifies the description that is used at multiple places"
        },
        "referenceId" : {
          "type" : "string",
          "description" : "Specifies the unique ID for customer reference post the transaction completes"
        },
        "scheduledDate" : {
          "type" : "string",
          "description" : "Specifies the date on which the scheduled transfer payment must occur (This parameter is valid only if the isScheduled parameter is set to true)"
        },
        "searchAmount" : {
          "type" : "string",
          "description" : "Specifies the amount that must be searched within an account"
        },
        "searchDateRange" : {
          "type" : "string",
          "description" : "Specifies the range of dates for carrying out the search operation"
        },
        "searchDescription" : {
          "type" : "string",
          "description" : "Specifies the descriptions for the search operation"
        },
        "searchEndDate" : {
          "type" : "string",
          "description" : "Specifies the date on which the search operation ends"
        },
        "searchMaxAmount" : {
          "type" : "string",
          "description" : "Specifies the maximum amount that is to be searched within the account"
        },
        "searchMinAmount" : {
          "type" : "string",
          "description" : "Specifies the minimum amount that is to be searched within the account"
        },
        "searchStartDate" : {
          "type" : "string",
          "description" : "Specifies the date on which the search operation must begin"
        },
        "searchTransactionType" : {
          "type" : "string",
          "description" : "Specifies the transaction type for the search operation"
        },
        "searchType" : {
          "type" : "string",
          "description" : "Specifies the type of search based on the status value, such as PENDING and COMPLETED"
        },
        "secondaryEmail" : {
          "type" : "string",
          "description" : "Specifies the secondary Email ID of the customer"
        },
        "secondaryEmail2" : {
          "type" : "string"
        },
        "secondaryPhoneNumber2" : {
          "type" : "string",
          "description" : "Specifies the secondary phone number of the customer"
        },
        "secondDeposit" : {
          "type" : "string",
          "description" : "Specifies the secondary deposit account details of the customer"
        },
        "secondoryPhoneNumber" : {
          "type" : "string",
          "description" : "Specifies the secondary number of the customer"
        },
        "sortBy" : {
          "type" : "string",
          "description" : "Specifies the sorting criteria for the response such as amount or transaction date"
        },
        "statusDescription" : {
          "type" : "string",
          "description" : "statusDescription"
        },
        "success" : {
          "type" : "string",
          "description" : "success"
        },
        "toAccountName" : {
          "type" : "string",
          "description" : "Specifies the name of the account to which the amount must be credited"
        },
        "toAccountNumber" : {
          "type" : "string",
          "description" : "Specifies the account number to which the amount must be credited."
        },
        "toAccountType" : {
          "type" : "string",
          "description" : "Specifies the type of the account to which the amount must be credited."
        },
        "toCheckNumber" : {
          "type" : "string",
          "description" : "Specifies the check number to which the amount must be credited."
        },
        "totalAmount" : {
          "type" : "string",
          "description" : "Specifies the total amount that is involved in the trasaction"
        },
        "transactionComments" : {
          "type" : "string",
          "description" : "Specifies certain comments that the customer provides based on the transaction"
        },
        "transactionDate" : {
          "type" : "string",
          "description" : "Specifies the date on which the transaction must occur"
        },
        "transactionId" : {
          "type" : "string",
          "description" : "Specifies the unique ID that is generated for every account"
        },
        "transactionsNotes" : {
          "type" : "string",
          "description" : "Specifies additional information about the transaction"
        },
        "transactionType" : {
          "type" : "string",
          "description" : "Specifies whether the transaction type is an internal transfer, an external transfer, or an international transfer."
        },
        "validDate" : {
          "type" : "string",
          "description" : "validDate"
        },
        "viewReportLink" : {
          "type" : "string",
          "description" : "Specifies the link that the customer clicks to view various reports"
        },
        "overdraft" : {
          "type" : "string",
          "description" : "Specifies the overdraft account details"
        },
        "isPaypersonDeleted" : {
          "type" : "string",
          "description" : "Specifies whether the pay person is deleted"
        },
        "frontImage1" : {
          "type" : "string",
          "description" : "frontImage1"
        },
        "frontImage2" : {
          "type" : "string",
          "description" : "frontImage2"
        },
        "backImage1" : {
          "type" : "string",
          "description" : "backImage1"
        },
        "backImage2" : {
          "type" : "string",
          "description" : "backImage2"
        },
        "checkDesc" : {
          "type" : "string",
          "description" : "checkDesc"
        },
        "checkNumber1" : {
          "type" : "string",
          "description" : "Specifies the check number"
        },
        "checkNumber2" : {
          "type" : "string",
          "description" : "Specifies the check number"
        },
        "bankName1" : {
          "type" : "string",
          "description" : "Specifies the bank name"
        },
        "bankName2" : {
          "type" : "string",
          "description" : "Specifies the bank name"
        },
        "withdrawlAmount1" : {
          "type" : "string",
          "description" : "Specifies the withdrawal amount"
        },
        "withdrawlAmount2" : {
          "type" : "string",
          "description" : "Specifies the withdrawal amount"
        },
        "totalCheckAmount" : {
          "type" : "string",
          "description" : "Specifies the total check amount"
        },
        "cashAmount" : {
          "type" : "string",
          "description" : "Specifies the cash amount"
        },
        "payeeCurrency" : {
          "type" : "string",
          "description" : "Specifies the currency in which the payee accepts the amount"
        },
        "swiftCode" : {
          "type" : "string",
          "description" : "Specifies the bank identifier code that is valid throughout the country"
        },
        "wireAccountType" : {
          "type" : "string",
          "description" : "Specifies the type of account for wire trasaction"
        },
        "country" : {
          "type" : "string",
          "description" : "Specifies the name of the country"
        },
        "IBAN" : {
          "type" : "string",
          "description" : "Specifies the International Bank Account Number"
        },
        "bankName" : {
          "type" : "string",
          "description" : "Specifies the bank name of the customer"
        },
        "routingNumber" : {
          "type" : "string",
          "description" : "Specifies the routing account number for the customer"
        },
        "internationalRoutingCode" : {
          "type" : "string",
          "description" : "Specifies the international routing code for the customer's account"
        },
        "zipCode" : {
          "type" : "string",
          "description" : "Specifies the zip code of the customer"
        },
        "cityName" : {
          "type" : "string",
          "description" : "Specifies the name of the city"
        },
        "state" : {
          "type" : "string",
          "description" : "Specifies the name of the state"
        },
        "bankAddressLine1" : {
          "type" : "string",
          "description" : "Specifies the first address line of the bank"
        },
        "bankAddressLine2" : {
          "type" : "string",
          "description" : "Specifies the second address line of the bank"
        },
        "bankCity" : {
          "type" : "string",
          "description" : "Specifies the city in which the bank resides"
        },
        "bankState" : {
          "type" : "string",
          "description" : "Specifies the state in which the bank resides"
        },
        "bankZip" : {
          "type" : "string",
          "description" : "Specifies the zip code of the bank"
        },
        "payeeType" : {
          "type" : "string",
          "description" : "Specifies the type of payee"
        },
        "disputeReason" : {
          "type" : "string",
          "description" : "Specifies the reason for dispute raised by the customer"
        },
        "disputeDescription" : {
          "type" : "string",
          "description" : "Specifies the description of the dispute raised by the customer"
        },
        "checkDateOfIssue" : {
          "type" : "string",
          "description" : "Specifies the date on which the cheque was issued"
        },
        "checkReason" : {
          "type" : "string",
          "description" : "Specifies the reason for stopping the cheque"
        },
        "isPayeeDeleted" : {
          "type" : "string",
          "description" : "Specifies whether the payee is deleted"
        },
        "payeeAddressLine2" : {
          "type" : "string",
          "description" : "Specifies the second line of the payee's address"
        },
        "amountRecieved" : {
          "type" : "string",
          "description" : "Specifies the amount recieved by the customer"
        },
        "requestValidityInMonths" : {
          "type" : "string",
          "description" : "Specifies the request raised for validity by the customer in months"
        },
        "requestValidity" : {
          "type" : "string",
          "description" : "Specifies the request raised for validity by the customer"
        },
        "requestType" : {
          "type" : "string",
          "description" : "Specifies the type of request raised by the customer"
        },
        "disputeDate" : {
          "type" : "string",
          "description" : "Specifies the date on which the dispute was raised"
        },
        "disputeStatus" : {
          "type" : "string",
          "description" : "Specifies the status of the dispute either resolved or in progress"
        },
        "isDisputed" : {
          "type" : "string",
          "description" : "Specifies whether a transaction is in a disputed status"
        },
        "cardId" : {
          "type" : "string",
          "description" : "Specifies the ID of the customer's card or document"
        },
        "isOverdraft" : {
          "type" : "string",
          "description" : "Specifies whether the credit taken from the bank by the customer is an overdraft or not"
        },
        "title" : {
          "type" : "string",
          "description" : "title"
        },
        "generatedBy" : {
          "type" : "string",
          "description" : "generatedBy"
        },
        "filters" : {
          "type" : "string",
          "description" : "filters"
        },
        "statementReference" : {
          "type" : "string",
          "description" : "Specifies the transaction statement ID"
        },
        "transCreditDebitIndicator" : {
          "type" : "string",
          "description" : "Indicates whether the credit or debit involves trans-country transaction"
        },
        "bookingDateTime" : {
          "type" : "string",
          "description" : "Specifies the date and time of the booking made by the customer"
        },
        "valueDateTime" : {
          "type" : "string",
          "description" : "valueDateTime"
        },
        "transactionInformation" : {
          "type" : "string",
          "description" : "Specifies the additional information regarding the transaction"
        },
        "addressLine" : {
          "type" : "string",
          "description" : "Specifies the address of the banking cutomer"
        },
        "transactionAmount" : {
          "type" : "string",
          "description" : "Specifies the amount that was involved in the transaction"
        },
        "transactionCurrency" : {
          "type" : "string",
          "description" : "Specifies the currency type of the transaction such as USD, EUR, and so on"
        },
        "chargeAmount" : {
          "type" : "string",
          "description" : "Specifies the additional amount charged on the transaction made by the customer"
        },
        "chargeCurrency" : {
          "type" : "string",
          "description" : "Specifies the currency in which the additional charge is calculated"
        },
        "sourceCurrency" : {
          "type" : "string",
          "description" : "Specifies the currency in which the transaction begins at the source"
        },
        "targetCurrency" : {
          "type" : "string",
          "description" : "Specifies the currency in which the transaction is received at the target"
        },
        "unitCurrency" : {
          "type" : "string",
          "description" : "Specifies the unit currency of the transaction"
        },
        "exchangeRate" : {
          "type" : "string",
          "description" : "Specifies the exchange rate value that is involved while performing the transaction"
        },
        "contractIdentification" : {
          "type" : "string",
          "description" : "Specifies the identification for the validation of the contract"
        },
        "quotationDate" : {
          "type" : "string",
          "description" : "Specifies the date for the quotation"
        },
        "instructedAmount" : {
          "type" : "string",
          "description" : "Specifies the amount that is instructed to be transferred"
        },
        "transactionCode" : {
          "type" : "string",
          "description" : "Specifies the unique that is generated for every transaction"
        },
        "transactionSubCode" : {
          "type" : "string",
          "description" : "Specifies the sub-code that is generated for every transaction"
        },
        "proprietaryTransactionCode" : {
          "type" : "string",
          "description" : "Specfies a code that is generated for every proprietary transaction"
        },
        "proprietaryTransactionIssuer" : {
          "type" : "string",
          "description" : "Specifies the name of the issuer for the proprietary transaction"
        },
        "balanceCreditDebitIndicator" : {
          "type" : "string",
          "description" : "balancecreditIndicator"
        },
        "balanceType" : {
          "type" : "string",
          "description" : "Specifies the type of balance amount"
        },
        "balanceAmount" : {
          "type" : "string",
          "description" : "Specifies the amount of balance that a customer contains in the account"
        },
        "balanceCurrency" : {
          "type" : "string",
          "description" : "Specifies the currency in which the available amount is present in the account"
        },
        "merchantName" : {
          "type" : "string",
          "description" : "Specifies the name of the merchant"
        },
        "merchantCategoryCode" : {
          "type" : "string",
          "description" : "Specifies the code for the category to which the merchant belongs"
        },
        "creditorAgentSchemeName" : {
          "type" : "string",
          "description" : "Specifies the name of the schema to which the credito agent belongs"
        },
        "creditorAgentIdentification" : {
          "type" : "string",
          "description" : "Identifies the Creditor agent"
        },
        "creditorAgentName" : {
          "type" : "string",
          "description" : "Specifies the name of the creditor agent"
        },
        "creditorAgentaddressType" : {
          "type" : "string",
          "description" : "Specifies the address of the creditor agent"
        },
        "creditorAgentDepartment" : {
          "type" : "string",
          "description" : "Specifies the department to which the credito agent belongs"
        },
        "creditorAgentSubDepartment" : {
          "type" : "string",
          "description" : "Specifies the sub-department to which the creditor belongs"
        },
        "creditorAgentStreetName" : {
          "type" : "string",
          "description" : "Specifies the street name where the creditor agent resides"
        },
        "creditorAgentBuildingNumber" : {
          "type" : "string",
          "description" : "Specifies the building number of the creditor agent"
        },
        "creditorAgentPostCode" : {
          "type" : "string",
          "description" : "Specifies the postcode of the creditor agent"
        },
        "creditorAgentTownName" : {
          "type" : "string",
          "description" : "Specifies the town in which the creditor agent resides"
        },
        "creditorAgentCountrySubDivision" : {
          "type" : "string",
          "description" : "Specifies the sub-division of the country to which the creditor belongs"
        },
        "creditorAgentCountry" : {
          "type" : "string",
          "description" : "Specifies the country to which the creditor agent belongs"
        },
        "creditorAgentAddressLine" : {
          "type" : "string",
          "description" : "Specifies the address line of the creditor agent"
        },
        "creditorAccountSchemeName" : {
          "type" : "string",
          "description" : "Specifies the account schema of the creditor agent"
        },
        "creditorAccountSeconIdentification" : {
          "type" : "string",
          "description" : "creditorAccountSeconIdentification"
        },
        "debtorAgentSchemeName" : {
          "type" : "string",
          "description" : "Specifies the scheme name of the debtor agent"
        },
        "debtorAgentIdentification" : {
          "type" : "string",
          "description" : "Identifies the debtor agent"
        },
        "debtorAgentName" : {
          "type" : "string",
          "description" : "Specifies the name of the debtor agent"
        },
        "debtorAgentAddressType" : {
          "type" : "string",
          "description" : "Specifies the address of the debtor agent"
        },
        "debtorAgentDepartment" : {
          "type" : "string",
          "description" : "Specifies the department of the debtor agent"
        },
        "debtorAgentSubDepartment" : {
          "type" : "string",
          "description" : "Specifies the sub-department of the debtor agent"
        },
        "debtorAgentStreetName" : {
          "type" : "string",
          "description" : "Specifies the street name in which the debtor agent resides"
        },
        "debtorAgentBuildingNumber" : {
          "type" : "string",
          "description" : "Specifies the building code of the debtor agent"
        },
        "dedtorAgentPostCode" : {
          "type" : "string",
          "description" : "Specifies the postcode of the debtor agent"
        },
        "debtorAgentTownName" : {
          "type" : "string",
          "description" : "Specifies the town name in which the debtor agent resides"
        },
        "debtorAgentCountrySubDivision" : {
          "type" : "string",
          "description" : "Specifies the sub-division of the country to which the debtor agent belongs"
        },
        "debtorAgentCountry" : {
          "type" : "string",
          "description" : "Specifies the country name to which the debtor agent belongs"
        },
        "debtorAgentAddressLine" : {
          "type" : "string",
          "description" : "Specifies the address line of the debtor agent"
        },
        "debtorAccountSchemeName" : {
          "type" : "string",
          "description" : "Specifies the account schema name of the debtor agent"
        },
        "debtorAccountName" : {
          "type" : "string",
          "description" : "Specifies the account name of the debtor agent"
        },
        "debtorAccountSeconIdentification" : {
          "type" : "string",
          "description" : "debtorAccountSeconIdentification"
        },
        "cardInstrumentSchemeName" : {
          "type" : "string",
          "description" : "Specifies the schema name for the card instrument that the customer uses for performing the transaction"
        },
        "cardInstrumentAuthorisationType" : {
          "type" : "string",
          "description" : "Specifies the authorization type for the card instrument that the customer uses for performing the transaction"
        },
        "cardInstrumentName" : {
          "type" : "string",
          "description" : "Specifies the name of the card instrument that the customer uses for performing the transaction"
        },
        "cardInstrumentIdentification" : {
          "type" : "string",
          "description" : "Identifies the card instrument"
        },
        "sortCode" : {
          "type" : "string",
          "description" : "sortCode"
        },
        "feeCurrency" : {
          "type" : "string",
          "description" : "Specifies the currency in which the charges for making the transaction are paid"
        },
        "feePaidByReceipent" : {
          "type" : "string",
          "description" : "Specifies the fee amount paid by the recipient to your account"
        },
        "convertedAmount" : {
          "type" : "string",
          "description" : "Specifies the amount that is converted from base currency to other currency"
        },
        "baseCurrency" : {
          "type" : "string",
          "description" : "Specifies the base currency that is used to perform the transactions"
        },
        "FirstPaymentDateTime" : {
          "type" : "string",
          "description" : "Specifies the date and time on which the first payment was made"
        },
        "NextPaymentDateTime" : {
          "type" : "string",
          "description" : "Specifies the date and time on which the next payment transaction is supposed to take place"
        },
        "FinalPaymentDateTime" : {
          "type" : "string",
          "description" : "Specifies the date and time on which the final payment transaction must take place"
        },
        "StandingOrderStatusCode" : {
          "type" : "string",
          "description" : "Specifies the status of the standing order"
        },
        "FP_Amount" : {
          "type" : "string",
          "description" : "FP_Amount"
        },
        "FP_Currency" : {
          "type" : "string",
          "description" : "FP_Currency"
        },
        "NP_Amount" : {
          "type" : "string",
          "description" : "NP_Amount"
        },
        "NP_Currency" : {
          "type" : "string",
          "description" : "NP_Currency"
        },
        "FPA_Amount" : {
          "type" : "string",
          "description" : "FPA_Amount"
        },
        "FPA_Currency" : {
          "type" : "string",
          "description" : "FPA_Currency"
        },
        "beneficiaryName" : {
          "type" : "string",
          "description" : "Specifies the name of the beneficiary"
        },
        "isInternationalAccount" : {
          "type" : "string",
          "description" : "Specifies whether the account is an international account"
        },
        "ConsentId" : {
          "type" : "string",
          "description" : "Specifies the unique ID for a consent between the payee and beneficiary"
        },
        "Initiation_InstructionIdentification" : {
          "type" : "string",
          "description" : "Identifies the instruction necessary for the transaction initiation"
        },
        "RI_Unstructured" : {
          "type" : "string",
          "description" : "RI_Unstructured"
        },
        "RI_Reference" : {
          "type" : "string",
          "description" : "RI_Reference"
        },
        "Initiation_EndToEndIdentification" : {
          "type" : "string",
          "description" : "Initiation_EndToEndIdentification"
        },
        "RiskPaymentContextCode" : {
          "type" : "string",
          "description" : "Specifies the code for performing a risk payment"
        },
        "linkSelf" : {
          "type" : "string",
          "description" : "linkSelf"
        },
        "StatusUpdateDateTime" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Specifies the date and time on which the status has been updated"
        },
        "createdDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "createdDate"
        },
        "DomesticPaymentId" : {
          "type" : "string",
          "description" : "Specifies the unique ID for performing the domestic payments"
        },
        "dataStatus" : {
          "type" : "string",
          "description" : "dataStatus"
        },
        "Auth_Token" : {
          "type" : "string",
          "description" : "Specifies the token generated during authentication"
        },
        "fileType" : {
          "type" : "string",
          "description" : "fileType"
        },
        "MFAAttributes" : {
          "type" : "string",
          "description" : "Specifies the Multi-Factor Authentication attributes."
        },
        "serviceName" : {
          "type" : "string",
          "description" : "Specifies the name of the service"
        },
        "payPersonNickName" : {
          "type" : "string",
          "description" : "Specifies the nickname to whom the amount to be paid"
        },
        "p2pAlternateContact" : {
          "type" : "string",
          "description" : "Specifies the alternate contact to whom the p2p transfer must be made when the original customer is not available"
        },
        "billerId" : {
          "type" : "string",
          "description" : "Specifies the ID of the biller"
        },
        "MoreRecordsToken" : {
          "type" : "string",
          "description" : "Specifies the token value for more records"
        },
        "MoreRecordsflag" : {
          "type" : "string",
          "description" : "MoreRecordsflag"
        },
        "TransactionsMoreRecordsToken" : {
          "type" : "string",
          "description" : "Specifies the token value for the records"
        },
        "UserName" : {
          "type" : "string",
          "description" : "Specifies the user name of the customer"
        },
        "deviceID" : {
          "type" : "string",
          "description" : "Specifies a unique ID of the customer's device"
        },
        "fromAccountCurrency" : {
          "type" : "string",
          "description" : "Specifies the currency in which the amount must be debited from a specific account"
        },
        "toAccountCurrency" : {
          "type" : "string",
          "description" : "Specifies the currency in which the amount must be credited to a specific account"
        },
        "beneficiaryId" : {
          "type" : "string",
          "description" : "Specifies the unique ID for the beneficiary"
        },
        "currencyCode" : {
          "type" : "string",
          "description" : "Specifies the currency code for performing the transaction"
        },
        "postedDate" : {
          "type" : "string",
          "description" : "Specifies the date on which the transaction has been successfully made"
        },
        "id" : {
          "type" : "string",
          "description" : "Specifies a unique ID"
        },
        "dbpErrCode" : {
          "type" : "string",
          "description" : "Specifies the error code"
        },
        "dbpErrMsg" : {
          "type" : "string",
          "description" : "Specifies the error message"
        }
      }
    },
    "Response_Get_Transactions" : {
      "type" : "object",
      "properties" : {
        "opstatus" : {
          "type" : "integer"
        },
        "httpStatusCode" : {
          "type" : "integer"
        },
        "records" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Transactions"
          }
        }
      }
    },
    "Response_Custom" : {
      "type" : "object",
      "properties" : {
        "opstatus" : {
          "type" : "integer"
        },
        "httpStatusCode" : {
          "type" : "integer"
        }
      }
    },
    "Response_Transactions" : {
      "type" : "object",
      "properties" : {
        "opstatus" : {
          "type" : "integer"
        },
        "httpStatusCode" : {
          "type" : "integer"
        },
        "transactionId" : {
          "type" : "string",
          "description" : "Specifies the unique ID that is generated for every account"
        }
      }
    },
    "Response_Delete" : {
      "type" : "object",
      "properties" : {
        "opstatus" : {
          "type" : "integer"
        },
        "httpStatusCode" : {
          "type" : "integer"
        },
        "deletedRecords" : {
          "type" : "integer"
        }
      }
    }
  }
}