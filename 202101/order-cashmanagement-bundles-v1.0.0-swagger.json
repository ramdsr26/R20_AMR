{
  "swagger" : "2.0",
  "info" : {
    "description" : "API for cash management to create and update bundle accounts",
    "version" : "v1.0.0",
    "title" : "Cash Management - Bundle Account management"
  },
  "host" : "api.server.com",
  "basePath" : "/api/v1.0.0/",
  "schemes" : [ "http", "https" ],
  "security" : [ {
    "apiKey" : [ ]
  } ],
  "paths" : {
    "/order/cashManagement/bundles/accounts/summaryAccounts/transactionStops" : {
      "post" : {
        "summary" : "Create Block on Summary Accounts",
        "description" : "Create Block on Summary Accounts",
        "operationId" : "createBlockOnSummaryAccounts",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/BlockOnSummaryAccounts"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "createBlockOnSummaryAccountsResponse",
            "schema" : {
              "$ref" : "#/definitions/BlockOnSummaryAccountsResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          }
        }
      },
      "put" : {
        "summary" : "Update Block on Summary Accounts",
        "description" : "Update Block on Summary Accounts",
        "operationId" : "updateBlockOnSummaryAccounts",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/BlockOnSummaryAccounts"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "updateBlockOnSummaryAccountsResponse",
            "schema" : {
              "$ref" : "#/definitions/BlockOnSummaryAccountsResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          }
        }
      }
    },
    "/order/cashManagement/bundles/accounts/currencySummaryAccounts/transactionStops" : {
      "post" : {
        "summary" : "Create Block on Currency Summary Accounts",
        "description" : "Create Block on Currency Summary Accounts",
        "operationId" : "createBlockOnCurrencySummaryAccounts",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/BlockOnSummaryAccounts"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "createBlockOnCurrencySummaryAccountsResponse",
            "schema" : {
              "$ref" : "#/definitions/BlockOnSummaryAccountsResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          }
        }
      },
      "put" : {
        "summary" : "Update Block on Currency Summary Accounts",
        "description" : "Update Block on Currency Summary Accounts",
        "operationId" : "updateBlockOnCurrencySummaryAccounts",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/BlockOnSummaryAccounts"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "updateBlockOnCurrencySummaryAccountsResponse",
            "schema" : {
              "$ref" : "#/definitions/BlockOnSummaryAccountsResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          }
        }
      }
    },
    "/order/cashManagement/bundles/accounts/transactionAccounts/transactionStops" : {
      "post" : {
        "summary" : "Create Block on Transaction Accounts",
        "description" : "Create Block on Transaction Accounts",
        "operationId" : "createBlockOnTransactionAccounts",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/BlockOnTransactionAccounts"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "createBlockOnTransactionAccountsResponse",
            "schema" : {
              "$ref" : "#/definitions/BlockOnTransactionAccountsResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          }
        }
      },
      "put" : {
        "summary" : "Update Block on Transaction Accounts",
        "description" : "Update Block on Transaction Accounts",
        "operationId" : "updateBlockOnTransactionAccounts",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/BlockOnTransactionAccounts"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "updateBlockOnTransactionAccountsResponse",
            "schema" : {
              "$ref" : "#/definitions/BlockOnTransactionAccountsResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          }
        }
      }
    },
    "/order/cashManagement/bundles/updateSettlement" : {
      "put" : {
        "summary" : "Update Settlement instructions to an Account",
        "description" : "Update Settlement instructions to an Account",
        "operationId" : "updateBundleSettlementAccount",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/BundleSettlementAccount"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "updateBundleSettlementAccountResponse",
            "schema" : {
              "$ref" : "#/definitions/BundleSettlementAccountResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          }
        }
      }
    }
  },
  "securityDefinitions" : {
    "apiKey" : {
      "type" : "apiKey",
      "name" : "Authorization",
      "in" : "header"
    }
  },
  "definitions" : {
    "PayloadHeader" : {
      "properties" : {
        "override" : {
          "type" : "object",
          "properties" : {
            "overrideDetails" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "id" : {
                    "type" : "string",
                    "description" : "The identifier of the override."
                  },
                  "description" : {
                    "type" : "string",
                    "description" : "The actual override message."
                  },
                  "code" : {
                    "type" : "string",
                    "description" : "The code related to override message."
                  },
                  "responseCode" : {
                    "type" : "string",
                    "description" : "The user input to accept/reject the override."
                  }
                }
              }
            }
          }
        },
        "audit" : {
          "type" : "object",
          "properties" : {
            "versionNumber" : {
              "type" : "string",
              "description" : "The CURR.NO. of the record"
            }
          }
        }
      }
    },
    "BlockOnSummaryAccounts" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/BlockOnSummaryAccountsBody"
        }
      },
      "description" : "BlockOnSummaryAccounts",
      "example" : {
        "header" : {
          "audit" : {
            "versionNumber" : "string"
          },
          "override" : {
            "overrideDetails" : [ {
              "code" : "string",
              "description" : "string",
              "id" : "string",
              "responseCode" : "string"
            } ]
          }
        },
        "body" : {
          "summary" : {
            "expiryDate" : "2015-07-20",
            "postingRestriction" : "string",
            "unrestrictionText" : "string",
            "restrictionReason" : "string",
            "restrictionText" : "string",
            "startDate" : "2015-07-20",
            "unrestrictionReason" : "string"
          },
          "activityId" : "ACCOUNTS-UPDATE-SUMMARY",
          "productId" : "SUMMARY.ACCOUNT",
          "arrangementEffectiveDate" : "20190417",
          "arrangementCustomerIds" : [ {
            "arrangementCustomerId" : "string"
          } ]
        }
      }
    },
    "BlockOnSummaryAccountsBody" : {
      "type" : "object",
      "properties" : {
        "arrangementCustomerIds" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "arrangementCustomerId" : {
                "type" : "string",
                "description" : "Customer id details of the specific arrangement",
                "minLength" : 0,
                "maxLength" : 45
              }
            }
          }
        },
        "arrangementEffectiveDate" : {
          "type" : "string",
          "description" : "It is a date on/upon which an account is considered to take effect",
          "minLength" : 0,
          "maxLength" : 45
        },
        "productId" : {
          "type" : "string",
          "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
          "minLength" : 0,
          "maxLength" : 45
        },
        "activityId" : {
          "type" : "string",
          "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
          "minLength" : 0,
          "maxLength" : 45
        },
        "summary" : {
          "type" : "object",
          "properties" : {
            "postingRestriction" : {
              "type" : "string",
              "description" : "Identifies any restrictions for posting entries that are to be imposed on the Account",
              "minLength" : 0,
              "maxLength" : 18
            },
            "restrictionReason" : {
              "type" : "string",
              "description" : "Sets restrictions on the actions that can be performed on an account. Allowed values can be retrieved through method getEbLookup, virtualTableName BLOCK.REASON.CODES. ",
              "minLength" : 0,
              "maxLength" : 20
            },
            "restrictionText" : {
              "type" : "string",
              "description" : "Free text information to capture the reason for restriction applied on an account",
              "minLength" : 0,
              "maxLength" : 25
            },
            "startDate" : {
              "type" : "string",
              "format" : "date",
              "description" : "Contains the date on which the transaction or payment gets initiated."
            },
            "expiryDate" : {
              "type" : "string",
              "format" : "date",
              "description" : "The date an agreement such as an arrangement, product, credit facility or limit is due to expire"
            },
            "unrestrictionReason" : {
              "type" : "string",
              "description" : "Captures the code that removes the restriction set on an account.  Allowed values can be retrieved through method getEbLookup, virtualTableName UNBLOCK.REASON.CODES.",
              "minLength" : 0,
              "maxLength" : 19
            },
            "unrestrictionText" : {
              "type" : "string",
              "description" : "Reason for unblocking the restriction set on an account",
              "minLength" : 0,
              "maxLength" : 25
            }
          }
        }
      }
    },
    "ArrangementHeader" : {
      "properties" : {
        "transactionStatus" : {
          "type" : "string",
          "description" : "The status of the transaction"
        },
        "aaaId" : {
          "type" : "string",
          "description" : "The Identifier of the aa record created"
        },
        "id" : {
          "type" : "string",
          "description" : "The Identifier of the record created"
        },
        "status" : {
          "type" : "string",
          "description" : "Status of the API(success/failed)"
        },
        "uniqueIdentifier" : {
          "type" : "string",
          "description" : "The unique identifier/Message Reference of the record created."
        },
        "audit" : {
          "type" : "object",
          "properties" : {
            "T24_time" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "Time taken to response by T24"
            },
            "versionNumber" : {
              "type" : "string",
              "description" : "The CURR.NO. of the record"
            },
            "requestParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the request by IRIS"
            },
            "responseParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the response by IRIS"
            }
          }
        }
      }
    },
    "BlockOnSummaryAccountsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ArrangementHeader"
        },
        "body" : {
          "$ref" : "#/definitions/BlockOnSummaryAccountsResponseBody"
        }
      },
      "description" : "BlockOnSummaryAccountsResponse"
    },
    "BlockOnSummaryAccountsResponseBody" : {
      "type" : "object",
      "properties" : {
        "arrangementActivity" : {
          "type" : "object",
          "properties" : {
            "arrangementCustomerIds" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "arrangementCustomerId" : {
                    "type" : "string",
                    "description" : "Customer id details of the specific arrangement",
                    "minLength" : 0,
                    "maxLength" : 45
                  }
                }
              }
            },
            "arrangementId" : {
              "type" : "string",
              "description" : "Indicates an unique identifier of an account",
              "minLength" : 0,
              "maxLength" : 45
            },
            "arrangementEffectiveDate" : {
              "type" : "string",
              "description" : "It is a date on/upon which an account is considered to take effect",
              "minLength" : 0,
              "maxLength" : 45
            },
            "productId" : {
              "type" : "string",
              "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
              "minLength" : 0,
              "maxLength" : 45
            },
            "activityId" : {
              "type" : "string",
              "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
              "minLength" : 0,
              "maxLength" : 45
            }
          }
        },
        "activities" : {
          "type" : "object",
          "properties" : {
            "{activityName}" : {
              "type" : "object",
              "properties" : {
                "activity" : {
                  "type" : "string"
                },
                "transactionStatus" : {
                  "type" : "string",
                  "description" : "The status of the transaction"
                },
                "id" : {
                  "type" : "string",
                  "description" : "The Identifier of the record created"
                }
              }
            }
          }
        },
        "properties" : {
          "type" : "object",
          "properties" : {
            "summary" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to response by T24"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "postingRestriction" : {
                      "type" : "string",
                      "description" : "Identifies any restrictions for posting entries that are to be imposed on the Account",
                      "minLength" : 0,
                      "maxLength" : 18
                    },
                    "restrictionReason" : {
                      "type" : "string",
                      "description" : "Sets restrictions on the actions that can be performed on an account. Allowed values can be retrieved through method getEbLookup, virtualTableName BLOCK.REASON.CODES. ",
                      "minLength" : 0,
                      "maxLength" : 20
                    },
                    "restrictionText" : {
                      "type" : "string",
                      "description" : "Free text information to capture the reason for restriction applied on an account",
                      "minLength" : 0,
                      "maxLength" : 25
                    },
                    "startDate" : {
                      "type" : "string",
                      "format" : "date",
                      "description" : "Contains the date on which the transaction or payment gets initiated."
                    },
                    "expiryDate" : {
                      "type" : "string",
                      "format" : "date",
                      "description" : "The date an agreement such as an arrangement, product, credit facility or limit is due to expire"
                    },
                    "unrestrictionReason" : {
                      "type" : "string",
                      "description" : "Captures the code that removes the restriction set on an account.  Allowed values can be retrieved through method getEbLookup, virtualTableName UNBLOCK.REASON.CODES.",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "unrestrictionText" : {
                      "type" : "string",
                      "description" : "Reason for unblocking the restriction set on an account",
                      "minLength" : 0,
                      "maxLength" : 25
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "overrideBody" : {
      "properties" : {
        "overrideDetails" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The identifier of the override."
              },
              "description" : {
                "type" : "string",
                "description" : "The actual override message."
              },
              "code" : {
                "type" : "string",
                "description" : "The code related to override message."
              },
              "options" : {
                "type" : "array",
                "description" : "The usable options for the override.",
                "items" : {
                  "type" : "string"
                }
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the override."
              }
            }
          }
        }
      }
    },
    "ArrangementErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ArrangementHeader"
        },
        "error" : {
          "$ref" : "#/definitions/ArrangementErrorResponseBody"
        },
        "override" : {
          "$ref" : "#/definitions/overrideBody"
        }
      },
      "description" : "ArrangementErrorResponse"
    },
    "ArrangementErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "errorDetails" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "fieldName" : {
                "type" : "string",
                "description" : "The name of the field"
              },
              "code" : {
                "type" : "string",
                "description" : "The identifier of the error message"
              },
              "message" : {
                "type" : "string",
                "description" : "The actual t24 error message "
              },
              "property" : {
                "type" : "string",
                "description" : "The corresponding property"
              }
            }
          }
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: "
        }
      }
    },
    "BusinessArrangementErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ArrangementHeader"
        },
        "error" : {
          "$ref" : "#/definitions/BusinessArrangementErrorResponseBody"
        },
        "override" : {
          "$ref" : "#/definitions/overrideBody"
        }
      },
      "description" : "BusinessArrangementErrorResponse"
    },
    "BusinessArrangementErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "errorDetails" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "fieldName" : {
                "type" : "string",
                "description" : "The name of the field"
              },
              "code" : {
                "type" : "string",
                "description" : "The identifier of the error message"
              },
              "message" : {
                "type" : "string",
                "description" : "The actual t24 error message for bad requests"
              },
              "property" : {
                "type" : "string",
                "description" : "The corresponding property"
              }
            }
          }
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: Business"
        }
      }
    },
    "SystemArrangementErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ArrangementHeader"
        },
        "error" : {
          "$ref" : "#/definitions/SystemArrangementErrorResponseBody"
        },
        "override" : {
          "$ref" : "#/definitions/overrideBody"
        }
      },
      "description" : "SystemArrangementErrorResponse"
    },
    "SystemArrangementErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "errorDetails" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "fieldName" : {
                "type" : "string",
                "description" : "The name of the field"
              },
              "code" : {
                "type" : "string",
                "description" : "The identifier of the error message"
              },
              "message" : {
                "type" : "string",
                "description" : "The actual t24 error message caused by server"
              },
              "property" : {
                "type" : "string",
                "description" : "The corresponding property"
              }
            }
          }
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: System"
        }
      }
    },
    "BlockOnTransactionAccounts" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/BlockOnTransactionAccountsBody"
        }
      },
      "description" : "BlockOnTransactionAccounts",
      "example" : {
        "header" : {
          "audit" : {
            "versionNumber" : "string"
          },
          "override" : {
            "overrideDetails" : [ {
              "code" : "string",
              "description" : "string",
              "id" : "string",
              "responseCode" : "string"
            } ]
          }
        },
        "body" : {
          "activityId" : "ACCOUNTS-UPDATE-BALANCE",
          "productId" : "TR.ACCOUNT",
          "balance" : {
            "expiryDate" : "2015-07-20",
            "postingRestriction" : "string",
            "unrestrictionText" : "string",
            "restrictionReason" : "string",
            "restrictionText" : "string",
            "startDate" : "2015-07-20",
            "unrestrictionReason" : "string"
          },
          "arrangementEffectiveDate" : "string",
          "arrangementCustomerIds" : [ {
            "arrangementCustomerId" : "string"
          } ]
        }
      }
    },
    "BlockOnTransactionAccountsBody" : {
      "type" : "object",
      "properties" : {
        "arrangementCustomerIds" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "arrangementCustomerId" : {
                "type" : "string",
                "description" : "Customer id details of the specific arrangement",
                "minLength" : 0,
                "maxLength" : 45
              }
            }
          }
        },
        "arrangementEffectiveDate" : {
          "type" : "string",
          "description" : "It is a date on/upon which an account is considered to take effect",
          "minLength" : 0,
          "maxLength" : 45
        },
        "productId" : {
          "type" : "string",
          "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
          "minLength" : 0,
          "maxLength" : 45
        },
        "activityId" : {
          "type" : "string",
          "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
          "minLength" : 0,
          "maxLength" : 45
        },
        "balance" : {
          "type" : "object",
          "properties" : {
            "postingRestriction" : {
              "type" : "string",
              "description" : "Identifies any restrictions for posting entries that are to be imposed on the Account",
              "minLength" : 0,
              "maxLength" : 18
            },
            "restrictionReason" : {
              "type" : "string",
              "description" : "Sets restrictions on the actions that can be performed on an account. Allowed values can be retrieved through method getEbLookup, virtualTableName BLOCK.REASON.CODES. ",
              "minLength" : 0,
              "maxLength" : 20
            },
            "restrictionText" : {
              "type" : "string",
              "description" : "Free text information to capture the reason for restriction applied on an account",
              "minLength" : 0,
              "maxLength" : 25
            },
            "startDate" : {
              "type" : "string",
              "format" : "date",
              "description" : "Contains the date on which the transaction or payment gets initiated."
            },
            "expiryDate" : {
              "type" : "string",
              "format" : "date",
              "description" : "The date an agreement such as an arrangement, product, credit facility or limit is due to expire"
            },
            "unrestrictionReason" : {
              "type" : "string",
              "description" : "Captures the code that removes the restriction set on an account.  Allowed values can be retrieved through method getEbLookup, virtualTableName UNBLOCK.REASON.CODES.",
              "minLength" : 0,
              "maxLength" : 19
            },
            "unrestrictionText" : {
              "type" : "string",
              "description" : "Reason for unblocking the restriction set on an account",
              "minLength" : 0,
              "maxLength" : 25
            }
          }
        }
      }
    },
    "BlockOnTransactionAccountsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ArrangementHeader"
        },
        "body" : {
          "$ref" : "#/definitions/BlockOnTransactionAccountsResponseBody"
        }
      },
      "description" : "BlockOnTransactionAccountsResponse"
    },
    "BlockOnTransactionAccountsResponseBody" : {
      "type" : "object",
      "properties" : {
        "arrangementActivity" : {
          "type" : "object",
          "properties" : {
            "arrangementCustomerIds" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "arrangementCustomerId" : {
                    "type" : "string",
                    "description" : "Customer id details of the specific arrangement",
                    "minLength" : 0,
                    "maxLength" : 45
                  }
                }
              }
            },
            "arrangementId" : {
              "type" : "string",
              "description" : "Indicates an unique identifier of an account",
              "minLength" : 0,
              "maxLength" : 45
            },
            "arrangementEffectiveDate" : {
              "type" : "string",
              "description" : "It is a date on/upon which an account is considered to take effect",
              "minLength" : 0,
              "maxLength" : 45
            },
            "productId" : {
              "type" : "string",
              "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
              "minLength" : 0,
              "maxLength" : 45
            },
            "activityId" : {
              "type" : "string",
              "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
              "minLength" : 0,
              "maxLength" : 45
            }
          }
        },
        "activities" : {
          "type" : "object",
          "properties" : {
            "{activityName}" : {
              "type" : "object",
              "properties" : {
                "activity" : {
                  "type" : "string"
                },
                "transactionStatus" : {
                  "type" : "string",
                  "description" : "The status of the transaction"
                },
                "id" : {
                  "type" : "string",
                  "description" : "The Identifier of the record created"
                }
              }
            }
          }
        },
        "properties" : {
          "type" : "object",
          "properties" : {
            "balance" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to response by T24"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "postingRestriction" : {
                      "type" : "string",
                      "description" : "Identifies any restrictions for posting entries that are to be imposed on the Account",
                      "minLength" : 0,
                      "maxLength" : 18
                    },
                    "restrictionReason" : {
                      "type" : "string",
                      "description" : "Sets restrictions on the actions that can be performed on an account. Allowed values can be retrieved through method getEbLookup, virtualTableName BLOCK.REASON.CODES. ",
                      "minLength" : 0,
                      "maxLength" : 20
                    },
                    "restrictionText" : {
                      "type" : "string",
                      "description" : "Free text information to capture the reason for restriction applied on an account",
                      "minLength" : 0,
                      "maxLength" : 25
                    },
                    "startDate" : {
                      "type" : "string",
                      "format" : "date",
                      "description" : "Contains the date on which the transaction or payment gets initiated."
                    },
                    "expiryDate" : {
                      "type" : "string",
                      "format" : "date",
                      "description" : "The date an agreement such as an arrangement, product, credit facility or limit is due to expire"
                    },
                    "unrestrictionReason" : {
                      "type" : "string",
                      "description" : "Captures the code that removes the restriction set on an account.  Allowed values can be retrieved through method getEbLookup, virtualTableName UNBLOCK.REASON.CODES.",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "unrestrictionText" : {
                      "type" : "string",
                      "description" : "Reason for unblocking the restriction set on an account",
                      "minLength" : 0,
                      "maxLength" : 25
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "BundleSettlementAccount" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/BundleSettlementAccountBody"
        }
      },
      "description" : "BundleSettlementAccount",
      "example" : {
        "header" : {
          "audit" : {
            "versionNumber" : "string"
          },
          "override" : {
            "overrideDetails" : [ {
              "code" : "string",
              "description" : "Default Settlement Account not specified. Charges will not be processed.",
              "id" : "AA-DEF.SETTLE.ACCOUNT.MAND",
              "responseCode" : "RECEIVED"
            } ]
          }
        },
        "body" : {
          "activityId" : "BUNDLE-UPDATE-SETTLEMENT",
          "productId" : "MASTER.ACCOUNT",
          "arrangementEffectiveDate" : "string",
          "arrangementCustomerIds" : [ {
            "arrangementCustomerId" : "string"
          } ],
          "settlement" : {
            "payout" : [ {
              "payoutSettlementActivity" : "string",
              "property" : [ {
                "payoutAmount" : "string",
                "payoutPropertyClass" : "string",
                "payoutProperty" : "string",
                "payoutActivity" : "string",
                "payoutPOProduct" : "string",
                "payoutAccount" : "string",
                "payoutPercentage" : "string",
                "payoutBeneficiary" : "string"
              } ],
              "payoutSettlement" : "string"
            } ],
            "defaultSettlementAccount" : "string",
            "assocSettlement" : [ {
              "payinRCType" : "string",
              "reference" : [ {
                "payinPercentage" : "string",
                "payinActivity" : "string",
                "payinAccount" : "string",
                "payinPOProduct" : "string",
                "payinAmount" : "string",
                "payinBeneficiary" : "string",
                "ddMandateReference" : "string"
              } ],
              "payinSettlement" : "string",
              "payinSettlementActivity" : "string",
              "payinRCCondition" : "string",
              "payinRule" : "string"
            } ],
            "settlement" : [ {
              "reference" : [ {
                "payinPercentage" : "string",
                "payoutAmount" : "string",
                "payinAccount" : "string",
                "payinAmount" : "string",
                "payoutAccount" : "string",
                "payoutPercentage" : "string",
                "payinBeneficiary" : "string",
                "payoutBeneficiary" : "string",
                "ddMandateReference" : "string",
                "payinPoProduct" : "string",
                "payoutPoProduct" : "string"
              } ],
              "payinSettlement" : "string",
              "payoutSettlement" : "string"
            } ],
            "fxSettlement" : [ {
              "fxSettlementAccount" : "string",
              "fxSettlementCurrency" : "string"
            } ],
            "paymentType" : "string"
          }
        }
      }
    },
    "BundleSettlementAccountBody" : {
      "type" : "object",
      "properties" : {
        "arrangementCustomerIds" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "arrangementCustomerId" : {
                "type" : "string",
                "description" : "Customer id details of the specific arrangement",
                "minLength" : 0,
                "maxLength" : 45
              }
            }
          }
        },
        "arrangementEffectiveDate" : {
          "type" : "string",
          "description" : "It is a date on/upon which an account is considered to take effect",
          "minLength" : 0,
          "maxLength" : 45
        },
        "productId" : {
          "type" : "string",
          "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
          "minLength" : 0,
          "maxLength" : 45
        },
        "activityId" : {
          "type" : "string",
          "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
          "minLength" : 0,
          "maxLength" : 45
        },
        "settlement" : {
          "type" : "object",
          "properties" : {
            "settlement" : {
              "type" : "array",
              "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
              "items" : {
                "type" : "object",
                "properties" : {
                  "payinSettlement" : {
                    "type" : "string",
                    "description" : "Flag to indicate whether Payin Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                    "minLength" : 0,
                    "maxLength" : 15
                  },
                  "payoutSettlement" : {
                    "type" : "string",
                    "description" : "Flag to indicate whether Payout Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                    "minLength" : 0,
                    "maxLength" : 16
                  },
                  "reference" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "ddMandateReference" : {
                          "type" : "string",
                          "minLength" : 0,
                          "maxLength" : 18
                        },
                        "payinAccount" : {
                          "type" : "string",
                          "minLength" : 0,
                          "maxLength" : 12
                        },
                        "payinBeneficiary" : {
                          "type" : "string",
                          "minLength" : 0,
                          "maxLength" : 16
                        },
                        "payinPoProduct" : {
                          "type" : "string",
                          "minLength" : 0,
                          "maxLength" : 16
                        },
                        "payinPercentage" : {
                          "type" : "string",
                          "minLength" : 0,
                          "maxLength" : 15
                        },
                        "payinAmount" : {
                          "type" : "string",
                          "minLength" : 0,
                          "maxLength" : 11
                        },
                        "payoutAccount" : {
                          "type" : "string",
                          "description" : "The account to which a settlement amount is transferred.",
                          "minLength" : 0,
                          "maxLength" : 13
                        },
                        "payoutBeneficiary" : {
                          "type" : "string",
                          "description" : "The beneficiary that payment should be made to .",
                          "minLength" : 0,
                          "maxLength" : 17
                        },
                        "payoutPoProduct" : {
                          "type" : "string",
                          "minLength" : 0,
                          "maxLength" : 16
                        },
                        "payoutPercentage" : {
                          "type" : "string",
                          "minLength" : 0,
                          "maxLength" : 16
                        },
                        "payoutAmount" : {
                          "type" : "string",
                          "minLength" : 0,
                          "maxLength" : 12
                        }
                      }
                    }
                  }
                }
              }
            },
            "fxSettlement" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "fxSettlementCurrency" : {
                    "type" : "string",
                    "description" : "Indicates the Currency for which FX contra settlement account needs to be maintained",
                    "minLength" : 0,
                    "maxLength" : 20
                  },
                  "fxSettlementAccount" : {
                    "type" : "string",
                    "description" : "Indicates the contra settlement accounts which will be used to post the offset entries",
                    "minLength" : 0,
                    "maxLength" : 18
                  }
                }
              }
            },
            "assocSettlement" : {
              "type" : "array",
              "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
              "items" : {
                "type" : "object",
                "properties" : {
                  "payinSettlement" : {
                    "type" : "string",
                    "description" : "Flag to indicate whether Payin Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                    "minLength" : 0,
                    "maxLength" : 15
                  },
                  "payinRule" : {
                    "type" : "string",
                    "minLength" : 0,
                    "maxLength" : 9
                  },
                  "payinSettlementActivity" : {
                    "type" : "string",
                    "minLength" : 0,
                    "maxLength" : 23
                  },
                  "payinRCType" : {
                    "type" : "string",
                    "minLength" : 0,
                    "maxLength" : 11
                  },
                  "payinRCCondition" : {
                    "type" : "string",
                    "minLength" : 0,
                    "maxLength" : 16
                  },
                  "reference" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "ddMandateReference" : {
                          "type" : "string",
                          "minLength" : 0,
                          "maxLength" : 18
                        },
                        "payinAccount" : {
                          "type" : "string",
                          "minLength" : 0,
                          "maxLength" : 12
                        },
                        "payinBeneficiary" : {
                          "type" : "string",
                          "minLength" : 0,
                          "maxLength" : 16
                        },
                        "payinPOProduct" : {
                          "type" : "string",
                          "minLength" : 0,
                          "maxLength" : 14
                        },
                        "payinPercentage" : {
                          "type" : "string",
                          "minLength" : 0,
                          "maxLength" : 15
                        },
                        "payinAmount" : {
                          "type" : "string",
                          "minLength" : 0,
                          "maxLength" : 11
                        },
                        "payinActivity" : {
                          "type" : "string",
                          "minLength" : 0,
                          "maxLength" : 13
                        }
                      }
                    }
                  }
                }
              }
            },
            "payout" : {
              "type" : "array",
              "description" : "The corresponding property",
              "items" : {
                "type" : "object",
                "properties" : {
                  "payoutSettlement" : {
                    "type" : "string",
                    "description" : "Flag to indicate whether Payout Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                    "minLength" : 0,
                    "maxLength" : 16
                  },
                  "payoutSettlementActivity" : {
                    "type" : "string",
                    "minLength" : 0,
                    "maxLength" : 24
                  },
                  "property" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "payoutPropertyClass" : {
                          "type" : "string",
                          "minLength" : 0,
                          "maxLength" : 19
                        },
                        "payoutProperty" : {
                          "type" : "string",
                          "minLength" : 0,
                          "maxLength" : 14
                        },
                        "payoutAccount" : {
                          "type" : "string",
                          "description" : "The account to which a settlement amount is transferred.",
                          "minLength" : 0,
                          "maxLength" : 13
                        },
                        "payoutBeneficiary" : {
                          "type" : "string",
                          "description" : "The beneficiary that payment should be made to .",
                          "minLength" : 0,
                          "maxLength" : 17
                        },
                        "payoutPOProduct" : {
                          "type" : "string",
                          "minLength" : 0,
                          "maxLength" : 15
                        },
                        "payoutPercentage" : {
                          "type" : "string",
                          "minLength" : 0,
                          "maxLength" : 16
                        },
                        "payoutAmount" : {
                          "type" : "string",
                          "minLength" : 0,
                          "maxLength" : 12
                        },
                        "payoutActivity" : {
                          "type" : "string",
                          "minLength" : 0,
                          "maxLength" : 14
                        }
                      }
                    }
                  }
                }
              }
            },
            "paymentType" : {
              "type" : "string",
              "description" : "Indicates if the payment is Customer (C) type or Bank (B) type",
              "minLength" : 0,
              "maxLength" : 11
            },
            "defaultSettlementAccount" : {
              "type" : "string",
              "description" : "Indicates then account which will be used as the settlement account for all PAYIN or PAYOUT entries",
              "minLength" : 0,
              "maxLength" : 26
            }
          }
        }
      }
    },
    "BundleSettlementAccountResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ArrangementHeader"
        },
        "body" : {
          "$ref" : "#/definitions/BundleSettlementAccountResponseBody"
        }
      },
      "description" : "BundleSettlementAccountResponse"
    },
    "BundleSettlementAccountResponseBody" : {
      "type" : "object",
      "properties" : {
        "arrangementActivity" : {
          "type" : "object",
          "properties" : {
            "arrangementCustomerIds" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "arrangementCustomerId" : {
                    "type" : "string",
                    "description" : "Customer id details of the specific arrangement",
                    "minLength" : 0,
                    "maxLength" : 45
                  }
                }
              }
            },
            "arrangementId" : {
              "type" : "string",
              "description" : "Indicates an unique identifier of an account",
              "minLength" : 0,
              "maxLength" : 45
            },
            "arrangementEffectiveDate" : {
              "type" : "string",
              "description" : "It is a date on/upon which an account is considered to take effect",
              "minLength" : 0,
              "maxLength" : 45
            },
            "productId" : {
              "type" : "string",
              "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
              "minLength" : 0,
              "maxLength" : 45
            },
            "activityId" : {
              "type" : "string",
              "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
              "minLength" : 0,
              "maxLength" : 45
            }
          }
        },
        "activities" : {
          "type" : "object",
          "properties" : {
            "{activityName}" : {
              "type" : "object",
              "properties" : {
                "activity" : {
                  "type" : "string"
                },
                "transactionStatus" : {
                  "type" : "string",
                  "description" : "The status of the transaction"
                },
                "id" : {
                  "type" : "string",
                  "description" : "The Identifier of the record created"
                }
              }
            }
          }
        },
        "properties" : {
          "type" : "object",
          "properties" : {
            "settlement" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to response by T24"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "settlement" : {
                      "type" : "array",
                      "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "payinSettlement" : {
                            "type" : "string",
                            "description" : "Flag to indicate whether Payin Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "payoutSettlement" : {
                            "type" : "string",
                            "description" : "Flag to indicate whether Payout Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                            "minLength" : 0,
                            "maxLength" : 16
                          },
                          "reference" : {
                            "type" : "array",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "ddMandateReference" : {
                                  "type" : "string",
                                  "minLength" : 0,
                                  "maxLength" : 18
                                },
                                "payinAccount" : {
                                  "type" : "string",
                                  "minLength" : 0,
                                  "maxLength" : 12
                                },
                                "payinBeneficiary" : {
                                  "type" : "string",
                                  "minLength" : 0,
                                  "maxLength" : 16
                                },
                                "payinPoProduct" : {
                                  "type" : "string",
                                  "minLength" : 0,
                                  "maxLength" : 16
                                },
                                "payinPercentage" : {
                                  "type" : "string",
                                  "minLength" : 0,
                                  "maxLength" : 15
                                },
                                "payinAmount" : {
                                  "type" : "string",
                                  "minLength" : 0,
                                  "maxLength" : 11
                                },
                                "payoutAccount" : {
                                  "type" : "string",
                                  "description" : "The account to which a settlement amount is transferred.",
                                  "minLength" : 0,
                                  "maxLength" : 13
                                },
                                "payoutBeneficiary" : {
                                  "type" : "string",
                                  "description" : "The beneficiary that payment should be made to .",
                                  "minLength" : 0,
                                  "maxLength" : 17
                                },
                                "payoutPoProduct" : {
                                  "type" : "string",
                                  "minLength" : 0,
                                  "maxLength" : 16
                                },
                                "payoutPercentage" : {
                                  "type" : "string",
                                  "minLength" : 0,
                                  "maxLength" : 16
                                },
                                "payoutAmount" : {
                                  "type" : "string",
                                  "minLength" : 0,
                                  "maxLength" : 12
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "fxSettlement" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "fxSettlementCurrency" : {
                            "type" : "string",
                            "description" : "Indicates the Currency for which FX contra settlement account needs to be maintained",
                            "minLength" : 0,
                            "maxLength" : 20
                          },
                          "fxSettlementAccount" : {
                            "type" : "string",
                            "description" : "Indicates the contra settlement accounts which will be used to post the offset entries",
                            "minLength" : 0,
                            "maxLength" : 18
                          }
                        }
                      }
                    },
                    "assocSettlement" : {
                      "type" : "array",
                      "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "payinSettlement" : {
                            "type" : "string",
                            "description" : "Flag to indicate whether Payin Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "payinRule" : {
                            "type" : "string",
                            "minLength" : 0,
                            "maxLength" : 9
                          },
                          "payinSettlementActivity" : {
                            "type" : "string",
                            "minLength" : 0,
                            "maxLength" : 23
                          },
                          "payinRCType" : {
                            "type" : "string",
                            "minLength" : 0,
                            "maxLength" : 11
                          },
                          "payinRCCondition" : {
                            "type" : "string",
                            "minLength" : 0,
                            "maxLength" : 16
                          },
                          "reference" : {
                            "type" : "array",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "ddMandateReference" : {
                                  "type" : "string",
                                  "minLength" : 0,
                                  "maxLength" : 18
                                },
                                "payinAccount" : {
                                  "type" : "string",
                                  "minLength" : 0,
                                  "maxLength" : 12
                                },
                                "payinBeneficiary" : {
                                  "type" : "string",
                                  "minLength" : 0,
                                  "maxLength" : 16
                                },
                                "payinPOProduct" : {
                                  "type" : "string",
                                  "minLength" : 0,
                                  "maxLength" : 14
                                },
                                "payinPercentage" : {
                                  "type" : "string",
                                  "minLength" : 0,
                                  "maxLength" : 15
                                },
                                "payinAmount" : {
                                  "type" : "string",
                                  "minLength" : 0,
                                  "maxLength" : 11
                                },
                                "payinActivity" : {
                                  "type" : "string",
                                  "minLength" : 0,
                                  "maxLength" : 13
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "payout" : {
                      "type" : "array",
                      "description" : "The corresponding property",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "payoutSettlement" : {
                            "type" : "string",
                            "description" : "Flag to indicate whether Payout Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                            "minLength" : 0,
                            "maxLength" : 16
                          },
                          "payoutSettlementActivity" : {
                            "type" : "string",
                            "minLength" : 0,
                            "maxLength" : 24
                          },
                          "property" : {
                            "type" : "array",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "payoutPropertyClass" : {
                                  "type" : "string",
                                  "minLength" : 0,
                                  "maxLength" : 19
                                },
                                "payoutProperty" : {
                                  "type" : "string",
                                  "minLength" : 0,
                                  "maxLength" : 14
                                },
                                "payoutAccount" : {
                                  "type" : "string",
                                  "description" : "The account to which a settlement amount is transferred.",
                                  "minLength" : 0,
                                  "maxLength" : 13
                                },
                                "payoutBeneficiary" : {
                                  "type" : "string",
                                  "description" : "The beneficiary that payment should be made to .",
                                  "minLength" : 0,
                                  "maxLength" : 17
                                },
                                "payoutPOProduct" : {
                                  "type" : "string",
                                  "minLength" : 0,
                                  "maxLength" : 15
                                },
                                "payoutPercentage" : {
                                  "type" : "string",
                                  "minLength" : 0,
                                  "maxLength" : 16
                                },
                                "payoutAmount" : {
                                  "type" : "string",
                                  "minLength" : 0,
                                  "maxLength" : 12
                                },
                                "payoutActivity" : {
                                  "type" : "string",
                                  "minLength" : 0,
                                  "maxLength" : 14
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "paymentType" : {
                      "type" : "string",
                      "description" : "Indicates if the payment is Customer (C) type or Bank (B) type",
                      "minLength" : 0,
                      "maxLength" : 11
                    },
                    "defaultSettlementAccount" : {
                      "type" : "string",
                      "description" : "Indicates then account which will be used as the settlement account for all PAYIN or PAYOUT entries",
                      "minLength" : 0,
                      "maxLength" : 26
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "updateBlockOnSummaryAccounts" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/BlockOnSummaryAccountsBody"
        }
      },
      "description" : "BlockOnSummaryAccounts",
      "example" : {
        "header" : {
          "audit" : {
            "versionNumber" : "string"
          },
          "override" : {
            "overrideDetails" : [ {
              "code" : "string",
              "description" : "string",
              "id" : "string",
              "responseCode" : "string"
            } ]
          }
        },
        "body" : {
          "summary" : {
            "expiryDate" : "2015-07-20",
            "postingRestriction" : "string",
            "unrestrictionText" : "string",
            "restrictionReason" : "string",
            "restrictionText" : "string",
            "startDate" : "2015-07-20",
            "unrestrictionReason" : "string"
          },
          "activityId" : "ACCOUNTS-UPDATE-SUMMARY",
          "productId" : "SUMMARY.ACCOUNT",
          "arrangementEffectiveDate" : "20190417",
          "arrangementCustomerIds" : [ {
            "arrangementCustomerId" : "string"
          } ]
        }
      }
    },
    "updateBlockOnTransactionAccounts" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/BlockOnTransactionAccountsBody"
        }
      },
      "description" : "BlockOnTransactionAccounts",
      "example" : {
        "header" : {
          "audit" : {
            "versionNumber" : "string"
          },
          "override" : {
            "overrideDetails" : [ {
              "code" : "string",
              "description" : "string",
              "id" : "string",
              "responseCode" : "string"
            } ]
          }
        },
        "body" : {
          "activityId" : "ACCOUNTS-UPDATE-BALANCE",
          "productId" : "TR.ACCOUNT",
          "balance" : {
            "expiryDate" : "2015-07-20",
            "postingRestriction" : "string",
            "unrestrictionText" : "string",
            "restrictionReason" : "string",
            "restrictionText" : "string",
            "startDate" : "2015-07-20",
            "unrestrictionReason" : "string"
          },
          "arrangementEffectiveDate" : "string",
          "arrangementCustomerIds" : [ {
            "arrangementCustomerId" : "string"
          } ]
        }
      }
    },
    "createBlockOnSummaryAccounts" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/BlockOnSummaryAccountsBody"
        }
      },
      "description" : "BlockOnSummaryAccounts",
      "example" : {
        "header" : {
          "audit" : {
            "versionNumber" : "string"
          },
          "override" : {
            "overrideDetails" : [ {
              "code" : "string",
              "description" : "string",
              "id" : "string",
              "responseCode" : "string"
            } ]
          }
        },
        "body" : {
          "summary" : {
            "expiryDate" : "2015-07-20",
            "postingRestriction" : "string",
            "unrestrictionText" : "string",
            "restrictionReason" : "string",
            "restrictionText" : "string",
            "startDate" : "2015-07-20",
            "unrestrictionReason" : "string"
          },
          "activityId" : "ACCOUNTS-UPDATE-SUMMARY",
          "productId" : "SUMMARY.ACCOUNT",
          "arrangementEffectiveDate" : "20190417",
          "arrangementCustomerIds" : [ {
            "arrangementCustomerId" : "string"
          } ]
        }
      }
    },
    "createBlockOnTransactionAccounts" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/BlockOnTransactionAccountsBody"
        }
      },
      "description" : "BlockOnTransactionAccounts",
      "example" : {
        "header" : {
          "audit" : {
            "versionNumber" : "string"
          },
          "override" : {
            "overrideDetails" : [ {
              "code" : "string",
              "description" : "string",
              "id" : "string",
              "responseCode" : "string"
            } ]
          }
        },
        "body" : {
          "activityId" : "ACCOUNTS-UPDATE-BALANCE",
          "productId" : "TR.ACCOUNT",
          "balance" : {
            "expiryDate" : "2015-07-20",
            "postingRestriction" : "string",
            "unrestrictionText" : "string",
            "restrictionReason" : "string",
            "restrictionText" : "string",
            "startDate" : "2015-07-20",
            "unrestrictionReason" : "string"
          },
          "arrangementEffectiveDate" : "string",
          "arrangementCustomerIds" : [ {
            "arrangementCustomerId" : "string"
          } ]
        }
      }
    },
    "updateBundleSettlementAccount" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/BundleSettlementAccountBody"
        }
      },
      "description" : "BundleSettlementAccount",
      "example" : {
        "header" : {
          "audit" : {
            "versionNumber" : "string"
          },
          "override" : {
            "overrideDetails" : [ {
              "code" : "string",
              "description" : "Default Settlement Account not specified. Charges will not be processed.",
              "id" : "AA-DEF.SETTLE.ACCOUNT.MAND",
              "responseCode" : "RECEIVED"
            } ]
          }
        },
        "body" : {
          "activityId" : "BUNDLE-UPDATE-SETTLEMENT",
          "productId" : "MASTER.ACCOUNT",
          "arrangementEffectiveDate" : "string",
          "arrangementCustomerIds" : [ {
            "arrangementCustomerId" : "string"
          } ],
          "settlement" : {
            "payout" : [ {
              "payoutSettlementActivity" : "string",
              "property" : [ {
                "payoutAmount" : "string",
                "payoutPropertyClass" : "string",
                "payoutProperty" : "string",
                "payoutActivity" : "string",
                "payoutPOProduct" : "string",
                "payoutAccount" : "string",
                "payoutPercentage" : "string",
                "payoutBeneficiary" : "string"
              } ],
              "payoutSettlement" : "string"
            } ],
            "defaultSettlementAccount" : "string",
            "assocSettlement" : [ {
              "payinRCType" : "string",
              "reference" : [ {
                "payinPercentage" : "string",
                "payinActivity" : "string",
                "payinAccount" : "string",
                "payinPOProduct" : "string",
                "payinAmount" : "string",
                "payinBeneficiary" : "string",
                "ddMandateReference" : "string"
              } ],
              "payinSettlement" : "string",
              "payinSettlementActivity" : "string",
              "payinRCCondition" : "string",
              "payinRule" : "string"
            } ],
            "settlement" : [ {
              "reference" : [ {
                "payinPercentage" : "string",
                "payoutAmount" : "string",
                "payinAccount" : "string",
                "payinAmount" : "string",
                "payoutAccount" : "string",
                "payoutPercentage" : "string",
                "payinBeneficiary" : "string",
                "payoutBeneficiary" : "string",
                "ddMandateReference" : "string",
                "payinPoProduct" : "string",
                "payoutPoProduct" : "string"
              } ],
              "payinSettlement" : "string",
              "payoutSettlement" : "string"
            } ],
            "fxSettlement" : [ {
              "fxSettlementAccount" : "string",
              "fxSettlementCurrency" : "string"
            } ],
            "paymentType" : "string"
          }
        }
      }
    }
  }
}